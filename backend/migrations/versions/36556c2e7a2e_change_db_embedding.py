"""Change db embedding

Revision ID: 36556c2e7a2e
Revises: 30732418d8d2
Create Date: 2025-03-28 03:54:40.707794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '36556c2e7a2e'
down_revision: Union[str, None] = '30732418d8d2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('embedding_files', sa.Column('name', sa.String(
        length=255), nullable=False, comment='File name'))
    op.add_column('embedding_files', sa.Column('file_extension', sa.String(
        length=10), nullable=False, comment='File extension'))
    op.add_column('embedding_files', sa.Column('file_size', sa.String(
        length=15), nullable=False, comment='File size in bytes'))
    op.drop_column('embedding_files', 'last_embedding_dt')
    op.drop_column('embedding_files', 'embedding_status')
    op.drop_column('embedding_files', 'objects_name')
    op.drop_column('embedding_files', 'objects_update_dt')
    op.drop_column('embedding_files', 'embedding_reserve_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('embedding_files', sa.Column('embedding_reserve_date',
                  postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('embedding_files', sa.Column('objects_update_dt',
                  postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('embedding_files', sa.Column('objects_name', sa.VARCHAR(
        length=255), autoincrement=False, nullable=False))
    op.add_column('embedding_files', sa.Column('embedding_status',
                  sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('embedding_files', sa.Column('last_embedding_dt',
                  postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('embedding_files', 'file_size')
    op.drop_column('embedding_files', 'file_extension')
    op.drop_column('embedding_files', 'name')
    op.create_table('langchain_pg_collection',
                    sa.Column('name', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('cmetadata', postgresql.JSON(
                        astext_type=sa.Text()), autoincrement=False, nullable=True),
                    sa.Column('uuid', sa.UUID(),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint(
                        'uuid', name='langchain_pg_collection_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('langchain_pg_embedding',
                    sa.Column('collection_id', sa.UUID(),
                              autoincrement=False, nullable=True),
                    sa.Column('embedding', sa.NullType(),
                              autoincrement=False, nullable=True),
                    sa.Column('document', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()),
                              autoincrement=False, nullable=True),
                    sa.Column('custom_id', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('uuid', sa.UUID(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'],
                                            name='langchain_pg_embedding_collection_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint(
                        'uuid', name='langchain_pg_embedding_pkey')
                    )
    # ### end Alembic commands ###
